#!/bin/bash

while getopts hf:o:i:n:j:ew opt; do
  case $opt in
    h)
      echo ""
      echo " ------------------------------------------------------------------------------ "
      echo " superdenss is a simple wrapper for denss that automates the process of "
      echo " generating multiple density reconstructions and averaging them with EMAN2. "
      echo ""
      echo " -f: filename of .out GNOM file or .dat solution scattering data"
      echo " -o: the output prefix to name the output directory and all the files."
      echo " -i: input options for denss exactly as they would be given to denss, including"
      echo "     dashed options. Enclose everything in quotes. Dont include --file or --output."
      echo " -n: the number of reconstructions to run (default 20)"
      echo " -j: the number of cores to use for parallel processing (default 4)"
      echo " -e: generate and select enantiomers (significantly increases runtime, default=no)"
      echo " -w: overwrite the existing folder (appends/increments folder index if not given)"
      echo " ----------------------------------------------------------------------------- "
      echo ""
      exit 0
      ;;
    f)
      file=$OPTARG
      ;;
    o)
      output=$OPTARG
      ;;
    i)
      options=$OPTARG
      ;;
    n)
      n=$OPTARG
      ;;
    j)
      j=$OPTARG
      ;;
    e)
      enantiomers=True
      ;;
    w)
      overwrite=True
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." #>&2
      exit 1
      ;;
  esac
done

if [ -z $output ];
then
    output=${file%.*}
fi

id=$output

if [ -z $n ]; then n=20 ; fi
range=`eval echo {0..$((n-1))}`
if [ -z $j ]; then j=4 ; fi
dir=${output}
newdir=$dir
dirn=0

if [ "$overwrite" != "True" ];
then
    until [ ! -d "${newdir}" ];
    do
        newdir=${dir}_${dirn}
        let dirn++
    done
fi

if [ ! -d "${newdir}" ];
then
    mkdir $newdir
fi

cd $newdir
cp ../${file} .
pwd
echo "superdenss $@" > command

printf "Running denss.py %i times \n" $n

if [ `command -v parallel` ];
then
    parallel -j ${j} denss.py -f \{1} -o \{2}_{3} ${options} ::: ${file} ::: ${id} ::: ${range}
else
    for i in ${range};
    do
        denss.py -f ${file} -o ${id}_${i} ${options}
    done
fi

if [ "$enantiomers" == "True" ];
then
    maps=`ls ${id}*[0-9].mrc`
    best_enantiomers.sh $maps
    #Now run averaging using just the best enantiomers
    e2buildstacks.py --stackname ${id}.hdf ${id}*enant.hdf
else
    e2buildstacks.py --stackname ${id}.hdf ${id}*[0-9].mrc
fi

e2spt_classaverage.py --path=spt_01 --input ${id}.hdf --parallel=thread:${j} --saveali --savesteps --keep 3.0 --keepsig








